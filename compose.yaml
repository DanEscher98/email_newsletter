version: '3.8'
name: email-newsletter

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - "${DOCKER_RMQ_QUEUE_PORT}:5672"
        - "${DOCKER_RMQ_UI_PORT}:15672"
  db:
    image: postgres:latest
    container_name: psql_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PSWD}
    restart: always
    networks:
      - back-tier
    ports:
      - "${DOCKER_DB_PORT}:${DB_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data:Z
      - ./server_rs/migrations:/migrations:Z

  app:
    build:
      context: server_rs
      dockerfile: Dockerfile
    restart: always
    container_name: rust_server
    ports:
      - "${DOCKER_APP_PORT}:${APP_PORT}"
    networks:
      - front-tier
      - back-tier
    env_file: .env
    depends_on:
      - db
      - rabbitmq
  email:
    build:
      context: email_rmq
      dockerfile: Dockerfile
      args:
        EMAIL: ${EMAIL}
        EMAIL_PASSWORD: ${EMAIL_PASSWORD}
        MAIL_NAME: ${MAIL_NAME}
        SMTP_DOMAIN: ${SMTP_DOMAIN}
        SMTP_PORT: ${SMTP_PORT}
    container_name: email
    ports:
      - ${DOCKER_EMAIL_PORT}:25
    depends_on:
      - rabbitmq

volumes:
  db-data:
    driver: local

configs:
  httpd-config:
    external: true

secrets:
  server-certificate:
    external: true

networks:
  front-tier: {}
  back-tier: {}
